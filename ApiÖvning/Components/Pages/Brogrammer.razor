@page "/brogrammer"
@rendermode InteractiveServer
@using System.Text.Json
@using System.Text
@inject HttpClient Http

<div class="chat-container">
    <div class="chat-header">Brogrammer</div>

    <div class="chat-messages">
        <p>@brogrammer</p>
    </div>

    <div class="chat-input-container">
        <input class="chat-input" type="text" @bind="broprompt" placeholder="Ask Brogrammer a question..." />
        <button class="chat-button" @onclick="Send">Send</button>
    </div>
</div>

@code {
    private readonly string baseUrl = "https://api.aimlapi.com/v1";
    private readonly string apiKey = "13d9e85d476149f3b930020c2ad8f48a";

    string broprompt;
    string brogrammer = "Whats up Bro?";

    protected override void OnInitialized()
    {
        Console.WriteLine("Brogrammer component initialized");
    }

    private async Task Send()
    {
        Console.WriteLine("Send button clicked");
        await GetCompletionAsync();
    }

    private void Test()
    {
        Console.WriteLine("Test button clicked");
    }

    private async Task GetCompletionAsync()
    {
        string systemPrompt = "You are an expert on C# but you have genreal knowledge about all coding, but only speak like a fratboy. AVOID WRITING ANY CODE EXAMPLES AT ALL EVEN IF ASKED!!!!!!! use variations of bro as much as possible bro";

        Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", apiKey);

        var requestBody = new
        {
            model = "mistralai/Mistral-7B-Instruct-v0.2",
            messages = new[]
            {
                new { role = "system", content = systemPrompt },
                new { role = "user", content = broprompt }
            },
            temperature = 0.7,
            max_tokens = 256
        };

        string jsonRequest = JsonSerializer.Serialize(requestBody);
        var content = new StringContent(jsonRequest, Encoding.UTF8, "application/json");

        HttpResponseMessage response = await Http.PostAsync($"{baseUrl}/chat/completions", content);

        if (!response.IsSuccessStatusCode)
        {
            brogrammer = $"Error: {response.StatusCode} - {await response.Content.ReadAsStringAsync()}";
            return;
        }

        ChatCompletionResponse jsonResponse = JsonSerializer.Deserialize<ChatCompletionResponse>(await response.Content.ReadAsStringAsync());
        brogrammer = jsonResponse.Choices[0].Message.Content;
        StateHasChanged();
    }
}
