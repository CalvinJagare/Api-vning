@page "/brogrammer"
@using System.Text.Json
@using System.Text

<h3>Brogrammer</h3>

<div>
    <label>Brogrammer: </label>
    <p @bind="brogrammer"></p>
</div>

<div>
    <label>Ask Brogrammer A Question:</label>
    <input type="text" @bind="broprompt" />
</div>

<button class="btn" @onclick="send"></button>

@code {
    private static readonly string baseUrl = "https://api.aimlapi.com/v1";
    private static readonly string apiKey = "358d65632eb54e35a423f0e746903c9f";

    string broprompt;
    static string brogrammer;

    public static async Task GetCompletionAsync(string broprompt)
    {
        string systemPrompt = "You are an expert on C# but only speak like a fratboy";

        using HttpClient client = new HttpClient();
        client.DefaultRequestHeaders.Add("Authorization", $"Bearer {apiKey}");

        var requestBody = new
        {
            model = "mistralai/Mistral-7B-Instruct-v0.2",
            messages = new[]
            {
                new { role = "system", content = systemPrompt },
                new { role = "user", content = broprompt }
            },
            temperature = 0.7,
            max_tokens = 256
        };

        string jsonRequest = JsonSerializer.Serialize(requestBody);
        var content = new StringContent(jsonRequest, Encoding.UTF8, "application/json");
        
        HttpResponseMessage response = await client.PostAsync($"{baseUrl}/chat/completions", content);

        if (!response.IsSuccessStatusCode)
        {
            throw new Exception($"Error: {response.StatusCode} - {await response.Content.ReadAsStringAsync()}");
        }

        ChatCompletionResponse jsonResponse = JsonSerializer.Deserialize<ChatCompletionResponse>(await response.Content.ReadAsStringAsync());
        brogrammer = jsonResponse.Choices[0].Message.Content;
    }

    private async Task send()
    {
        await GetCompletionAsync(broprompt);
    }
}
